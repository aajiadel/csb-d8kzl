{"version":3,"sources":["ListItem.js","DraggableElement.js","DragList.js","App.js","index.js"],"names":["Avatar","styled","img","CardHeader","div","Author","CardFooter","DragItem","lorem","LoremIpsum","ListItem","item","index","randomHeader","useMemo","generateWords","draggableId","id","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","content","src","generateFromString","ColumnHeader","DroppableStyles","DraggableElement","prefix","elements","droppableId","droppableProps","map","placeholder","DragDropContextContainer","ListGrid","lists","generateLists","reduce","acc","listKey","count","Array","from","length","v","k","randomId","Math","floor","random","DragList","React","useState","setElements","useEffect","onDragEnd","result","destination","listCopy","list","splice","removeFromList","source","removedElement","newSourceList","destinationList","element","addToList","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.113578b0.chunk.js","sourcesContent":["import { Draggable } from \"react-beautiful-dnd\";\nimport { LoremIpsum } from \"lorem-ipsum\";\nimport { generateFromString } from \"generate-avatar\";\nimport React, { useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Avatar = styled.img`\n  height: 30px;\n  width: 30px;\n  border: 3px solid white;\n  border-radius: 50%;\n`;\n\nconst CardHeader = styled.div`\n  font-weight: 500;\n`;\n\nconst Author = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CardFooter = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst DragItem = styled.div`\n  padding: 10px;\n  border-radius: 6px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  background: white;\n  margin: 0 0 8px 0;\n  display: grid;\n  grid-gap: 20px;\n  flex-direction: column;\n`;\n\nconst lorem = new LoremIpsum();\n\nconst ListItem = ({ item, index }) => {\n  const randomHeader = useMemo(() => lorem.generateWords(5), []);\n\n  return (\n    <Draggable draggableId={item.id} index={index}>\n      {(provided, snapshot) => {\n        return (\n          <DragItem\n            ref={provided.innerRef}\n            snapshot={snapshot}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <CardHeader>{randomHeader}</CardHeader>\n            <span>Content</span>\n            <CardFooter>\n              <span>{item.content}</span>\n              <Author>\n                {item.id}\n                <Avatar\n                  src={`data:image/svg+xml;utf8,${generateFromString(item.id)}`}\n                />\n              </Author>\n            </CardFooter>\n          </DragItem>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nexport default ListItem;\n","import { Droppable } from \"react-beautiful-dnd\";\nimport ListItem from \"./ListItem\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst ColumnHeader = styled.div`\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\n\nconst DroppableStyles = styled.div`\n  padding: 10px;\n  border-radius: 6px;\n  background: #d4d4d4;\n`;\n\nconst DraggableElement = ({ prefix, elements }) => (\n  <DroppableStyles>\n    <ColumnHeader>{prefix}</ColumnHeader>\n    <Droppable droppableId={`${prefix}`}>\n      {(provided) => (\n        <div {...provided.droppableProps} ref={provided.innerRef}>\n          {elements.map((item, index) => (\n            <ListItem key={item.id} item={item} index={index} />\n          ))}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  </DroppableStyles>\n);\n\nexport default DraggableElement;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport DraggableElement from \"./DraggableElement\";\n\nconst DragDropContextContainer = styled.div`\n  padding: 20px;\n  border: 4px solid indianred;\n  border-radius: 6px;\n`;\n\nconst ListGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 8px;\n`;\n\n// fake data generator\nconst getItems = (count, prefix) =>\n  Array.from({ length: count }, (v, k) => k).map((k) => {\n    const randomId = Math.floor(Math.random() * 1000);\n    return {\n      id: `item-${randomId}`,\n      prefix,\n      content: `item ${randomId}`\n    };\n  });\n\nconst removeFromList = (list, index) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(index, 1);\n  return [removed, result];\n};\n\nconst addToList = (list, index, element) => {\n  const result = Array.from(list);\n  result.splice(index, 0, element);\n  return result;\n};\n\nconst lists = [\"todo\", \"inProgress\", \"done\"];\n\nconst generateLists = () =>\n  lists.reduce(\n    (acc, listKey) => ({ ...acc, [listKey]: getItems(10, listKey) }),\n    {}\n  );\n\nfunction DragList() {\n  const [elements, setElements] = React.useState(generateLists());\n\n  useEffect(() => {\n    setElements(generateLists());\n  }, []);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const listCopy = { ...elements };\n\n    const sourceList = listCopy[result.source.droppableId];\n    const [removedElement, newSourceList] = removeFromList(\n      sourceList,\n      result.source.index\n    );\n    listCopy[result.source.droppableId] = newSourceList;\n    const destinationList = listCopy[result.destination.droppableId];\n    listCopy[result.destination.droppableId] = addToList(\n      destinationList,\n      result.destination.index,\n      removedElement\n    );\n\n    setElements(listCopy);\n  };\n\n  return (\n    <DragDropContextContainer>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <ListGrid>\n          {lists.map((listKey) => (\n            <DraggableElement\n              elements={elements[listKey]}\n              key={listKey}\n              prefix={listKey}\n            />\n          ))}\n        </ListGrid>\n      </DragDropContext>\n    </DragDropContextContainer>\n  );\n}\n\nexport default DragList;\n","import DragList from \"./DragList\";\n\nfunction App() {\n  return <DragList />;\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}